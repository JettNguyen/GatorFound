{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\n// src/components/CommentSection.jsx\nimport React, { useState } from 'react';\nimport Comment from './Comment';\nimport './CommentSection.css'; // Ensure CSS is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  comments = [],\n  handleCommentSubmit\n}) => {\n  _s();\n  // Default to empty array\n  const [newComment, setNewComment] = useState('');\n  const handleAddComment = () => {\n    if (newComment.trim()) {\n      const commentData = {\n        id: Date.now(),\n        text: newComment,\n        replies: []\n      };\n      handleCommentSubmit(commentData); // Pass new comment back to PostItem\n      setNewComment(''); // Clear input\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"4CPgt7oQpkJXYA7nM53m+f+bai8=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","Comment","jsxDEV","_jsxDEV","CommentSection","comments","handleCommentSubmit","_s","newComment","setNewComment","handleAddComment","trim","commentData","id","Date","now","text","replies","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/CommentSection.jsx"],"sourcesContent":["// src/components/CommentSection.jsx\r\nimport React, { useState } from 'react';\r\nimport Comment from './Comment';\r\nimport './CommentSection.css'; // Ensure CSS is imported\r\n\r\nconst CommentSection = ({ comments = [], handleCommentSubmit }) => { // Default to empty array\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    const handleAddComment = () => {\r\n        if (newComment.trim()) {\r\n            const commentData = { id: Date.now(), text: newComment, replies: [] };\r\n            handleCommentSubmit(commentData); // Pass new comment back to PostItem\r\n            setNewComment(''); // Clear input\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-section\">\r\n            <div className=\"comment-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Add a comment...\"\r\n                />\r\n                <button onClick={handleAddComment}>Post</button>\r\n            </div>\r\n\r\n            <div className=\"comments-list\">\r\n                {comments.map(comment => (\r\n                    <Comment key={comment.id} comment={comment} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ,GAAG,EAAE;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAAE;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,EAAE;MACnB,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAER,UAAU;QAAES,OAAO,EAAE;MAAG,CAAC;MACrEX,mBAAmB,CAACM,WAAW,CAAC,CAAC,CAAC;MAClCH,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BhB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBhB,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEb,UAAW;QAClBc,QAAQ,EAAGC,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACF1B,OAAA;QAAQ2B,OAAO,EAAEpB,gBAAiB;QAAAS,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAEN1B,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBd,QAAQ,CAAC0B,GAAG,CAACC,OAAO,iBACjB7B,OAAA,CAACF,OAAO;QAAkB+B,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACnB,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CA9BIH,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}