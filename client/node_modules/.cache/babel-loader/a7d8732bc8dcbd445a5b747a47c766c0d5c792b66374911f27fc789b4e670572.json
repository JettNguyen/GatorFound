{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\PostItem.jsx\",\n  _s = $RefreshSig$();\n// src/components/PostItem.jsx\nimport React, { useState, useEffect } from 'react';\nimport CommentSection from './CommentSection';\nimport './PostItem.css'; // Ensure CSS is imported\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  post\n}) => {\n  _s();\n  const itemName = post.itemName;\n  const itemDescription = post.itemDescription;\n  const itemLocation = post.itemLocation;\n  const postType = post.postType;\n  const itemPhoto = post.itemPhoto;\n  const [comments, setComments] = useState([]); // Initialize comments as empty array\n  const [showCommentSection, setShowCommentSection] = useState(false); // Toggle comment visibility\n  const [isFlagged, setIsFlagged] = useState(false); // State to manage flagging\n  const itemID = post._id;\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`/comments/${itemID}/comments`);\n        alert(\"It hit handle fetch comment!\");\n        if (response.ok) {\n          const data = await response.json();\n          setComments(data); // Update comments with fetched data\n        } else {\n          console.error('Error fetching comments');\n        }\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [itemID]);\n  const handleNewComment = async comment => {\n    try {\n      const response = await fetch(`/comments/${itemID}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(comment)\n      });\n      alert(\"It hit handle new comment!\");\n      if (!response.ok) {\n        throw new Error('Failed to add comment');\n      }\n      const updatedComments = await response.json();\n      setComments(updatedComments); // Update comments after adding the new one\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const toggleFlag = () => {\n    setIsFlagged(!isFlagged);\n    // Optional: Call backend API to flag/unflag the post\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-icon\",\n      onClick: toggleFlag,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFlag,\n        className: isFlagged ? 'flagged' : 'unflagged'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: [postType === 'lost' ? 'Lost Item' : 'Found Item', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \" \", itemName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }, this), \" \", itemDescription || 'Not Provided']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this), \" \", itemLocation || 'Not Provided']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), itemPhoto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-photo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Photo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: itemPhoto,\n        alt: itemName,\n        style: {\n          width: 'auto',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-comments\",\n      onClick: () => setShowCommentSection(!showCommentSection),\n      children: showCommentSection ? '▼ Hide Comments' : '▶ Comment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), showCommentSection && /*#__PURE__*/_jsxDEV(CommentSection, {\n      itemID: itemID,\n      comments: comments,\n      handleCommentSubmit: handleNewComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(PostItem, \"e/YiGyPiIDdTtodmhkxRKqizi14=\");\n_c = PostItem;\nexport default PostItem;\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useState","useEffect","CommentSection","FontAwesomeIcon","faFlag","jsxDEV","_jsxDEV","PostItem","post","_s","itemName","itemDescription","itemLocation","postType","itemPhoto","comments","setComments","showCommentSection","setShowCommentSection","isFlagged","setIsFlagged","itemID","_id","fetchComments","response","fetch","alert","ok","data","json","console","error","handleNewComment","comment","method","headers","body","JSON","stringify","Error","updatedComments","toggleFlag","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","handleCommentSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/PostItem.jsx"],"sourcesContent":["// src/components/PostItem.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport CommentSection from './CommentSection';\r\nimport './PostItem.css'; // Ensure CSS is imported\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PostItem = ({ post }) => {\r\n    const itemName = post.itemName;\r\n    const itemDescription = post.itemDescription;\r\n    const itemLocation = post.itemLocation;\r\n    const postType = post.postType;\r\n    const itemPhoto = post.itemPhoto;\r\n    const [comments, setComments] = useState([]); // Initialize comments as empty array\r\n    const [showCommentSection, setShowCommentSection] = useState(false); // Toggle comment visibility\r\n    const [isFlagged, setIsFlagged] = useState(false); // State to manage flagging\r\n    const itemID = post._id;\r\n\r\n    useEffect(() => {\r\n        const fetchComments = async () => {\r\n            try {\r\n                const response = await fetch(`/comments/${itemID}/comments`);\r\n                alert(\"It hit handle fetch comment!\");\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setComments(data); // Update comments with fetched data\r\n                } else {\r\n                    console.error('Error fetching comments');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching comments:', error);\r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n    }, [itemID]);\r\n\r\n    const handleNewComment = async (comment) => {\r\n        try {\r\n            const response = await fetch(`/comments/${itemID}/comments`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(comment),\r\n            });\r\n            alert(\"It hit handle new comment!\");\r\n            if (!response.ok) {\r\n                throw new Error('Failed to add comment');\r\n            }\r\n\r\n            const updatedComments = await response.json();\r\n            setComments(updatedComments); // Update comments after adding the new one\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n        }\r\n    };\r\n    \r\n    const toggleFlag = () => {\r\n        setIsFlagged(!isFlagged);\r\n        // Optional: Call backend API to flag/unflag the post\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"post-item\">\r\n            {/* Flag Icon */}\r\n            <div className=\"flag-icon\" onClick={toggleFlag}>\r\n                <FontAwesomeIcon \r\n                    icon={faFlag} \r\n                    className={isFlagged ? 'flagged' : 'unflagged'} \r\n                />\r\n            </div>\r\n\r\n            <h4><strong><u>{postType === 'lost' ? 'Lost Item' : 'Found Item'}:</u></strong> {itemName}</h4>\r\n            <p><strong><u>Description:</u></strong> {itemDescription || 'Not Provided'}</p>\r\n            <p><strong><u>Location:</u></strong> {itemLocation || 'Not Provided'}</p>\r\n\r\n            {/* Display the uploaded image if available */}\r\n            {itemPhoto && (\r\n                <div className=\"post-photo\">\r\n                    <p><strong><u>Photo:</u></strong></p>\r\n                    <img src={itemPhoto} alt={itemName} style={{ width: 'auto', height: 'auto' }} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Toggle Comment Section Button */}\r\n            <button className=\"toggle-comments\" onClick={() => setShowCommentSection(!showCommentSection)}>\r\n                {showCommentSection ? '▼ Hide Comments' : '▶ Comment'}\r\n            </button>\r\n\r\n            {/* Render Comment Section if toggled open */}\r\n            {showCommentSection && (\r\n                <CommentSection itemID={itemID} comments={comments} handleCommentSubmit={handleNewComment} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}