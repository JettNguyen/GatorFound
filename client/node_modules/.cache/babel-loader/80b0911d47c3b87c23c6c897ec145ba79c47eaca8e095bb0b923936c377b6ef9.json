{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\PostItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommentSection from './CommentSection';\nimport './PostItem.css'; // Ensure CSS is imported\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  post\n}) => {\n  _s();\n  const {\n    itemName,\n    itemDescription,\n    itemLocation,\n    postType,\n    itemPhoto,\n    _id: itemID\n  } = post;\n  const [comments, setComments] = useState([]); // Comments array\n  const [showCommentSection, setShowCommentSection] = useState(false); // Toggle comments visibility\n  const [isFlagged, setIsFlagged] = useState(false); // Manage flagging\n  const [isLoading, setIsLoading] = useState(false); // Loading state for comments\n\n  // Fetch comments for the post\n  const fetchComments = async id => {\n    if (!id) return; // Guard against undefined itemID\n    setIsLoading(true); // Show loader while fetching\n    try {\n      var _data$comments;\n      const response = await fetch(`http://localhost:5000/GatorFound/comments/${id}/comments`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': `${sessionStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch comments');\n      }\n      const data = await response.json();\n\n      // Handle case where no comments exist or malformed response\n      setComments(data !== null && data !== void 0 && (_data$comments = data.comments) !== null && _data$comments !== void 0 && _data$comments.length ? data.comments : []);\n      console.log(\"It is setting this photo\", data.length());\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setComments([]); // On error, set to empty\n    } finally {\n      setIsLoading(false); // Hide loader\n    }\n  };\n\n  // Load comments when the component mounts\n  useEffect(() => {\n    fetchComments(itemID);\n  }, [itemID]);\n\n  // Handle toggling of comment section\n  const toggleCommentSection = () => {\n    setShowCommentSection(prevState => {\n      if (!prevState) {\n        fetchComments(itemID); // Fetch comments only when opening the section\n      }\n      return !prevState;\n    });\n  };\n  const handleNewComment = comment => {\n    setComments(prevComments => [...prevComments, comment]);\n  };\n  const toggleFlag = () => {\n    setIsFlagged(!isFlagged);\n    // Optional: Call backend API to flag/unflag the post\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-icon\",\n      onClick: toggleFlag,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFlag,\n        className: isFlagged ? 'flagged' : 'unflagged'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: [postType === 'lost' ? 'Lost Item' : 'Found Item', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), ' ', itemName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), ' ', itemDescription || 'Not Provided']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), ' ', itemLocation || 'Not Provided']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), itemPhoto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-photo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Photo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: itemPhoto,\n        alt: itemName,\n        style: {\n          width: 'auto',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-comments\",\n      onClick: toggleCommentSection,\n      children: showCommentSection ? '▼ Hide Comments' : '▶ Comment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), showCommentSection && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading comments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this) // Show loading message\n      : /*#__PURE__*/_jsxDEV(CommentSection, {\n        itemID: itemID,\n        comments: comments,\n        handleCommentSubmit: handleNewComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(PostItem, \"tnxV7hWIn4ggujjkKsZHqXoarRU=\");\n_c = PostItem;\nexport default PostItem;\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useState","useEffect","CommentSection","FontAwesomeIcon","faFlag","jsxDEV","_jsxDEV","PostItem","post","_s","itemName","itemDescription","itemLocation","postType","itemPhoto","_id","itemID","comments","setComments","showCommentSection","setShowCommentSection","isFlagged","setIsFlagged","isLoading","setIsLoading","fetchComments","id","_data$comments","response","fetch","method","headers","sessionStorage","getItem","ok","Error","data","json","length","console","log","error","toggleCommentSection","prevState","handleNewComment","comment","prevComments","toggleFlag","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","handleCommentSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/PostItem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CommentSection from './CommentSection';\r\nimport './PostItem.css'; // Ensure CSS is imported\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PostItem = ({ post }) => {\r\n    const { itemName, itemDescription, itemLocation, postType, itemPhoto, _id: itemID } = post;\r\n\r\n    const [comments, setComments] = useState([]); // Comments array\r\n    const [showCommentSection, setShowCommentSection] = useState(false); // Toggle comments visibility\r\n    const [isFlagged, setIsFlagged] = useState(false); // Manage flagging\r\n    const [isLoading, setIsLoading] = useState(false); // Loading state for comments\r\n\r\n    // Fetch comments for the post\r\n    const fetchComments = async (id) => {\r\n        if (!id) return; // Guard against undefined itemID\r\n        setIsLoading(true); // Show loader while fetching\r\n        try {\r\n            \r\n            const response = await fetch(`http://localhost:5000/GatorFound/comments/${id}/comments`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': `${sessionStorage.getItem('token')}`,\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch comments');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // Handle case where no comments exist or malformed response\r\n            setComments(data?.comments?.length ? data.comments : []);\r\n            console.log(\"It is setting this photo\", data.length());\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n            setComments([]); // On error, set to empty\r\n        } finally {\r\n            setIsLoading(false); // Hide loader\r\n        }\r\n    };\r\n\r\n    // Load comments when the component mounts\r\n    useEffect(() => {\r\n        fetchComments(itemID);\r\n    }, [itemID]);\r\n\r\n    // Handle toggling of comment section\r\n    const toggleCommentSection = () => {\r\n        setShowCommentSection((prevState) => {\r\n            if (!prevState) {\r\n                fetchComments(itemID); // Fetch comments only when opening the section\r\n            }\r\n            return !prevState;\r\n        });\r\n    };\r\n\r\n    const handleNewComment = (comment) => {\r\n        setComments((prevComments) => [...prevComments, comment]);\r\n    };\r\n\r\n    const toggleFlag = () => {\r\n        setIsFlagged(!isFlagged);\r\n        // Optional: Call backend API to flag/unflag the post\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-item\">\r\n            {/* Flag Icon */}\r\n            <div className=\"flag-icon\" onClick={toggleFlag}>\r\n                <FontAwesomeIcon\r\n                    icon={faFlag}\r\n                    className={isFlagged ? 'flagged' : 'unflagged'}\r\n                />\r\n            </div>\r\n\r\n            <h4>\r\n                <strong>\r\n                    <u>{postType === 'lost' ? 'Lost Item' : 'Found Item'}:</u>\r\n                </strong>{' '}\r\n                {itemName}\r\n            </h4>\r\n            <p>\r\n                <strong>\r\n                    <u>Description:</u>\r\n                </strong>{' '}\r\n                {itemDescription || 'Not Provided'}\r\n            </p>\r\n            <p>\r\n                <strong>\r\n                    <u>Location:</u>\r\n                </strong>{' '}\r\n                {itemLocation || 'Not Provided'}\r\n            </p>\r\n\r\n            {/* Display the uploaded image if available */}\r\n            {itemPhoto && (\r\n                <div className=\"post-photo\">\r\n                    <p>\r\n                        <strong>\r\n                            <u>Photo:</u>\r\n                        </strong>\r\n                    </p>\r\n                    <img src={itemPhoto} alt={itemName} style={{ width: 'auto', height: 'auto' }} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Toggle Comment Section Button */}\r\n            <button className=\"toggle-comments\" onClick={toggleCommentSection}>\r\n                {showCommentSection ? '▼ Hide Comments' : '▶ Comment'}\r\n            </button>\r\n\r\n            {/* Render Comment Section if toggled open */}\r\n            {showCommentSection && (\r\n                <div>\r\n                    {isLoading ? (\r\n                        <p>Loading comments...</p> // Show loading message\r\n                    ) : (\r\n                        <CommentSection\r\n                            itemID={itemID}\r\n                            comments={comments}\r\n                            handleCommentSubmit={handleNewComment}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}