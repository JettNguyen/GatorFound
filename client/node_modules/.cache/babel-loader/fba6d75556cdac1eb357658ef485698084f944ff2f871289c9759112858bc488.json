{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\PostPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/PostPage.jsx\nimport React, { useState } from 'react';\nimport PostList from './PostList';\nimport PostForm from './PostForm';\nimport './PostPage.css'; // Ensure CSS is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = ({\n  view,\n  lostPosts,\n  foundPosts,\n  userPosts,\n  handleNewPost,\n  handleFlag,\n  setUserPosts,\n  setAllPosts\n}) => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(''); // State for storing search query\n  const [filteredPosts, setFilteredPosts] = useState([]); // State for filtered posts\n\n  // Determine the posts to display based on the view\n  let postsToShow = [];\n  if (view === 'lost') {\n    postsToShow = lostPosts;\n  } else if (view === 'found') {\n    postsToShow = foundPosts;\n  } else if (view === 'yourPosts') {\n    postsToShow = userPosts;\n  }\n\n  // Filter posts by item name when the search query changes\n  const handleSearch = e => {\n    const query = e.target.value.toLowerCase();\n    setSearchQuery(query);\n\n    // Filter posts based on item name (case insensitive)\n    const filtered = postsToShow.filter(post => post.itemName.toLowerCase().includes(query));\n    setFilteredPosts(filtered);\n  };\n\n  // Display the filtered posts if there is a search query, otherwise show all posts\n  const displayPosts = searchQuery ? filteredPosts : postsToShow;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search posts by item name\",\n      value: searchQuery,\n      onChange: handleSearch,\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), view === 'createLostPost' && /*#__PURE__*/_jsxDEV(PostForm, {\n      postType: \"lost\",\n      handleSubmit: handleNewPost,\n      setUserPosts: setUserPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 43\n    }, this), view === 'createFoundPost' && /*#__PURE__*/_jsxDEV(PostForm, {\n      postType: \"found\",\n      handleSubmit: handleNewPost,\n      setUserPosts: setUserPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }, this), view !== 'createLostPost' && view !== 'createFoundPost' && /*#__PURE__*/_jsxDEV(PostList, {\n      posts: displayPosts,\n      handleFlag: handleFlag,\n      setAllPosts: setAllPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"h8g34aVLOqsXxQEyPcQd7u+uG0A=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","PostList","PostForm","jsxDEV","_jsxDEV","PostPage","view","lostPosts","foundPosts","userPosts","handleNewPost","handleFlag","setUserPosts","setAllPosts","_s","searchQuery","setSearchQuery","filteredPosts","setFilteredPosts","postsToShow","handleSearch","e","query","target","value","toLowerCase","filtered","filter","post","itemName","includes","displayPosts","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","postType","handleSubmit","posts","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/PostPage.jsx"],"sourcesContent":["// src/components/PostPage.jsx\r\nimport React, { useState } from 'react';\r\nimport PostList from './PostList';\r\nimport PostForm from './PostForm';\r\nimport './PostPage.css'; // Ensure CSS is imported\r\n\r\nconst PostPage = ({ view, lostPosts, foundPosts, userPosts, handleNewPost, handleFlag, setUserPosts, setAllPosts }) => {\r\n    const [searchQuery, setSearchQuery] = useState(''); // State for storing search query\r\n    const [filteredPosts, setFilteredPosts] = useState([]); // State for filtered posts\r\n\r\n    // Determine the posts to display based on the view\r\n    let postsToShow = [];\r\n\r\n    if (view === 'lost') {\r\n        postsToShow = lostPosts;\r\n    } else if (view === 'found') {\r\n        postsToShow = foundPosts;\r\n    } else if (view === 'yourPosts') {\r\n        postsToShow = userPosts;\r\n    }\r\n\r\n    // Filter posts by item name when the search query changes\r\n    const handleSearch = (e) => {\r\n        const query = e.target.value.toLowerCase();\r\n        setSearchQuery(query);\r\n\r\n        // Filter posts based on item name (case insensitive)\r\n        const filtered = postsToShow.filter((post) =>\r\n            post.itemName.toLowerCase().includes(query)\r\n        );\r\n        setFilteredPosts(filtered);\r\n    };\r\n\r\n    // Display the filtered posts if there is a search query, otherwise show all posts\r\n    const displayPosts = searchQuery ? filteredPosts : postsToShow;\r\n\r\n    return (\r\n        <div className=\"post-page\">\r\n            {/* Search Input Field */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search posts by item name\"\r\n                value={searchQuery}\r\n                onChange={handleSearch}\r\n                className=\"search-input\"\r\n            />\r\n\r\n            {/* Show Post Form if creating a new post */}\r\n            {view === 'createLostPost' && <PostForm postType=\"lost\" handleSubmit={handleNewPost} setUserPosts={setUserPosts} />}\r\n            {view === 'createFoundPost' && <PostForm postType=\"found\" handleSubmit={handleNewPost} setUserPosts={setUserPosts} />}\r\n\r\n            {/* Show Post List */}\r\n            {(view !== 'createLostPost' && view !== 'createFoundPost') && (\r\n                <PostList posts={displayPosts} handleFlag={handleFlag} setAllPosts={setAllPosts} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}