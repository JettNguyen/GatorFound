{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\PostList.jsx\";\n// src/components/PostList.jsx\nimport React from 'react'; // Add the missing imports\nimport './PostList.css';\nimport PostItem from './PostItem'; // Import PostItem\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  posts,\n  handleFlag,\n  setAllPosts\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      handleFlag: handleFlag,\n      setAllPosts: setAllPosts\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this) // Use a unique key, preferably post.id\n    ) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-posts\",\n      children: \"No posts to show!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this) // Message if there are no posts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","PostItem","jsxDEV","_jsxDEV","PostList","posts","handleFlag","setAllPosts","className","children","length","map","post","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/PostList.jsx"],"sourcesContent":["// src/components/PostList.jsx\r\nimport React from 'react';  // Add the missing imports\r\nimport './PostList.css';\r\nimport PostItem from './PostItem'; // Import PostItem\r\n\r\nconst PostList = ({posts, handleFlag, setAllPosts}) => {\r\n    \r\n    return (\r\n        <div className=\"post-list\">\r\n            {posts.length > 0 ? (\r\n                posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} handleFlag={handleFlag} setAllPosts = {setAllPosts} /> // Use a unique key, preferably post.id\r\n                ))\r\n            ) : (\r\n                <p className=\"no-posts\">No posts to show!</p>  // Message if there are no posts\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAE;AAC5B,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAQ,GAAGA,CAAC;EAACC,KAAK;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAEnD,oBACIJ,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBJ,KAAK,CAACK,MAAM,GAAG,CAAC,GACbL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACXT,OAAA,CAACF,QAAQ;MAAgBW,IAAI,EAAEA,IAAK;MAACN,UAAU,EAAEA,UAAW;MAACC,WAAW,EAAIA;IAAY,GAAzEK,IAAI,CAACC,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmE,CAAC,CAAC;IAC/F,CAAC,gBAEFd,OAAA;MAAGK,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAE;EAClD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACC,EAAA,GAbId,QAAQ;AAed,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}