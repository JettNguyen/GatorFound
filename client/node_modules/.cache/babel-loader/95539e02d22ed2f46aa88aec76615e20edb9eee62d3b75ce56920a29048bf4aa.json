{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\Comment.jsx\",\n  _s = $RefreshSig$();\n// src/components/Comment.jsx\nimport React, { useState } from 'react';\nimport './Comment.css'; // Ensure CSS is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment\n}) => {\n  _s();\n  const [showReplies, setShowReplies] = useState(false);\n  const [newReply, setNewReply] = useState('');\n  const [replies, setReplies] = useState(comment.comments.map(({\n    _id,\n    rep\n  }) => ({\n    id: _id,\n    reply: rep\n  })) || []);\n  console.log(\"ITEM ID IS:\", comment.id);\n  // const handleReply = () => {S\n  //     if (newReply.trim()) {\n  //         const replyData = { id: Date.now(), text: newReply };\n  //         setReplies([...replies, replyData]);\n  //         setNewReply('');\n  //     }\n  // };\n  const handleReply = async () => {\n    if (newReply.trim()) {\n      try {\n        console.log(\"Reply is: \", newReply);\n        // Send a POST request using fetch to add the reply to the backend\n        const response = await fetch(`http://localhost:5000/GatorFound/comments/${comment.id}/replies`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token': `${sessionStorage.getItem('token')}`\n          },\n          body: JSON.stringify({\n            reply: newReply\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to add reply');\n        }\n        const updatedComment = await response.json();\n        const reply = updatedComment.data;\n        // Update local state with the new reply\n        setReplies([...replies, reply]);\n        setNewReply(''); // Clear the input field\n      } catch (error) {\n        console.error('Error adding reply:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-replies\",\n      onClick: () => setShowReplies(!showReplies),\n      children: showReplies ? '▼ Hide Replies' : '▶ Reply'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), showReplies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies\",\n      children: [replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.reply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newReply,\n          onChange: e => setNewReply(e.target.value),\n          placeholder: \"Add a reply...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReply,\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"oUyAekIJwiURVAcS/db4tLlccBg=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comment","comment","_s","showReplies","setShowReplies","newReply","setNewReply","replies","setReplies","comments","map","_id","rep","id","reply","console","log","handleReply","trim","response","fetch","method","headers","sessionStorage","getItem","body","JSON","stringify","ok","Error","updatedComment","json","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/Comment.jsx"],"sourcesContent":["// src/components/Comment.jsx\r\nimport React, { useState } from 'react';\r\nimport './Comment.css'; // Ensure CSS is imported\r\n\r\nconst Comment = ({ comment }) => {\r\n    const [showReplies, setShowReplies] = useState(false);\r\n    const [newReply, setNewReply] = useState('');\r\n    const [replies, setReplies] = useState(comment.comments.map(({_id, rep}) =>\r\n    ({\r\n        id: _id,\r\n        reply: rep,\r\n    })) || []);\r\n    console.log(\"ITEM ID IS:\" , comment.id);\r\n    // const handleReply = () => {S\r\n    //     if (newReply.trim()) {\r\n    //         const replyData = { id: Date.now(), text: newReply };\r\n    //         setReplies([...replies, replyData]);\r\n    //         setNewReply('');\r\n    //     }\r\n    // };\r\n    const handleReply = async () => {\r\n        if (newReply.trim()) {\r\n            try {\r\n                console.log(\"Reply is: \", newReply);\r\n                // Send a POST request using fetch to add the reply to the backend\r\n                const response = await fetch(`http://localhost:5000/GatorFound/comments/${comment.id}/replies`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'auth-token': `${sessionStorage.getItem('token')}`,\r\n\r\n                    },\r\n                    body: JSON.stringify({ reply: newReply }),\r\n                });\r\n                \r\n                if (!response.ok) {\r\n                    throw new Error('Failed to add reply');\r\n                }\r\n\r\n                const updatedComment = await response.json();\r\n                const reply = updatedComment.data;\r\n                // Update local state with the new reply\r\n                setReplies([...replies, reply]);\r\n                setNewReply(''); // Clear the input field\r\n            } catch (error) {\r\n                console.error('Error adding reply:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            <p>{comment.comment}</p>\r\n            <button className=\"toggle-replies\" onClick={() => setShowReplies(!showReplies)}>\r\n                {showReplies ? '▼ Hide Replies' : '▶ Reply'}\r\n            </button>\r\n\r\n            {showReplies && (\r\n                <div className=\"replies\">\r\n                    {replies.map(reply => (\r\n                        <div key={reply.id} className=\"reply\">\r\n                            <p>{reply.reply}</p>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"reply-form\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newReply}\r\n                            onChange={(e) => setNewReply(e.target.value)}\r\n                            placeholder=\"Add a reply...\"\r\n                        />\r\n                        <button onClick={handleReply}>Reply</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}