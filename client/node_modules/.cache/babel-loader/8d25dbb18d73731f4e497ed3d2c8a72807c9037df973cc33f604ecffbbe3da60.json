{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\components\\\\PostItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommentSection from './CommentSection';\nimport './PostItem.css'; // Ensure CSS is imported\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  post,\n  handleFlag,\n  setAllPosts\n}) => {\n  _s();\n  const token = sessionStorage.getItem('token');\n  const decodedToken = token ? jwtDecode(token) : null;\n  const userID = decodedToken ? decodedToken.id : null;\n  const {\n    itemName,\n    itemDescription,\n    itemLocation,\n    postType,\n    itemPhoto,\n    _id: itemID,\n    userID: postId,\n    username\n  } = post;\n  const [comments, setComments] = useState([]); // Comments array\n  const [showCommentSection, setShowCommentSection] = useState(false); // Toggle comments visibility\n  const [isFlagged, setIsFlagged] = useState(post.isFlagged); // Manage flagging\n  const [isLoading, setIsLoading] = useState(false); // Loading state for comments\n  // Fetch comments for the post\n  const fetchComments = async id => {\n    if (!id) return; // Guard against undefined itemID\n    setIsLoading(true); // Show loader while fetching\n    try {\n      const response = await fetch(`http://localhost:5000/GatorFound/comments/${id}/comments`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': `${sessionStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch comments');\n      }\n      const data = await response.json();\n\n      // Handle case where no comments exist or malformed response\n      setComments(data.data.length ? data.data : []);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setComments([]); // On error, set to empty\n    } finally {\n      setIsLoading(false); // Hide loader\n    }\n  };\n\n  // Load comments when the component mounts\n  useEffect(() => {\n    fetchComments(itemID);\n  }, [itemID]);\n\n  // Handle toggling of comment section\n  const toggleCommentSection = () => {\n    setShowCommentSection(prevState => {\n      if (!prevState) {\n        fetchComments(itemID); // Fetch comments only when opening the section\n      }\n      return !prevState;\n    });\n  };\n  useEffect(() => {\n    fetchComments(itemID);\n  }, [itemID]);\n  const handleNewComment = comment => {\n    setComments(prevComments => [...prevComments, comment]);\n  };\n  const toggleFlag = async () => {\n    setIsFlagged(!isFlagged);\n    // Call backend API to flag/unflag the post\n    try {\n      const response = await fetch(`http://localhost:5000/GatorFound/items/${itemID}/flag`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': `${sessionStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          isFlagged: isFlagged\n        }) // Sending flag status\n      });\n      if (!response.ok) {\n        throw new Error('Failed to flag/unflag the post');\n      }\n      handleFlag();\n    } catch (error) {\n      console.error('Error flagging post:', error);\n      // Handle error, maybe reset the flag state if the backend fails\n    }\n  };\n  const deletePost = async postId => {\n    const confirmed = window.confirm('Are you sure you want to delete this post?');\n    if (!confirmed) return; // Abort if user cancels\n\n    try {\n      const response = await fetch(`http://localhost:5000/GatorFound/items/${postId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': `${sessionStorage.getItem('token')}`\n        }\n      });\n      console.log(\"Deleted item ID is: \", itemID);\n      const data = await response.json();\n      if (response.ok) {\n        alert('Post deleted successfully');\n        // Remove the post from the UI\n        setAllPosts(prevPosts => prevPosts.filter(post => post._id !== postId));\n      } else {\n        alert(`Failed to delete post: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      alert('An error occurred while deleting the post');\n    }\n  };\n  // console.log(\"USER ID IS: \",sessionStorage.getItem('token').user.id  )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-icon\",\n      onClick: toggleFlag,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFlag,\n        className: isFlagged ? 'flagged' : 'unflagged'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Posted by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), \" \", username || 'Anonymous']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), userID === postId && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-button\",\n      onClick: () => deletePost(itemID),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: [postType === 'lost' ? 'Lost Item' : 'Found Item', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), ' ', itemName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), ' ', itemDescription || 'Not Provided']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), ' ', itemLocation || 'Not Provided']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), itemPhoto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-photo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Photo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: itemPhoto,\n        alt: itemName,\n        style: {\n          width: 'auto',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-comments\",\n      onClick: toggleCommentSection,\n      children: showCommentSection ? '▼ Hide Comments' : '▶ Comment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), showCommentSection && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading comments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }, this) // Show loading message\n      : /*#__PURE__*/_jsxDEV(CommentSection, {\n        itemID: itemID,\n        comments: comments,\n        handleCommentSubmit: handleNewComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(PostItem, \"/DfK6HzSZq7AktX0Yk39BmI0yIM=\");\n_c = PostItem;\nexport default PostItem;\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useState","useEffect","CommentSection","FontAwesomeIcon","faFlag","jwtDecode","jsxDEV","_jsxDEV","PostItem","post","handleFlag","setAllPosts","_s","token","sessionStorage","getItem","decodedToken","userID","id","itemName","itemDescription","itemLocation","postType","itemPhoto","_id","itemID","postId","username","comments","setComments","showCommentSection","setShowCommentSection","isFlagged","setIsFlagged","isLoading","setIsLoading","fetchComments","response","fetch","method","headers","ok","Error","data","json","length","error","console","toggleCommentSection","prevState","handleNewComment","comment","prevComments","toggleFlag","body","JSON","stringify","deletePost","confirmed","window","confirm","log","alert","prevPosts","filter","message","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","handleCommentSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/components/PostItem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CommentSection from './CommentSection';\r\nimport './PostItem.css'; // Ensure CSS is imported\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\nconst PostItem = ({ post, handleFlag, setAllPosts }) => {\r\n    const token = sessionStorage.getItem('token');\r\n    const decodedToken = token? jwtDecode(token): null;\r\n    const userID = decodedToken ? decodedToken.id : null;\r\n    const { itemName, itemDescription, itemLocation, postType, itemPhoto, _id: itemID, userID: postId, username } = post;\r\n    const [comments, setComments] = useState([]); // Comments array\r\n    const [showCommentSection, setShowCommentSection] = useState(false); // Toggle comments visibility\r\n    const [isFlagged, setIsFlagged] = useState(post.isFlagged); // Manage flagging\r\n    const [isLoading, setIsLoading] = useState(false); // Loading state for comments\r\n    // Fetch comments for the post\r\n    const fetchComments = async (id) => {\r\n        if (!id) return; // Guard against undefined itemID\r\n        setIsLoading(true); // Show loader while fetching\r\n        try {\r\n            \r\n            const response = await fetch(`http://localhost:5000/GatorFound/comments/${id}/comments`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': `${sessionStorage.getItem('token')}`,\r\n                },\r\n            });\r\n           \r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch comments');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            // Handle case where no comments exist or malformed response\r\n            setComments(data.data.length? data.data: []);\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n            setComments([]); // On error, set to empty\r\n        } finally {\r\n            setIsLoading(false); // Hide loader\r\n        }\r\n    };\r\n    \r\n    // Load comments when the component mounts\r\n    useEffect(() => {\r\n        fetchComments(itemID);\r\n    }, [itemID]);\r\n\r\n    // Handle toggling of comment section\r\n    const toggleCommentSection = () => {\r\n        setShowCommentSection((prevState) => {\r\n            if (!prevState) {\r\n                fetchComments(itemID); // Fetch comments only when opening the section\r\n            }\r\n            return !prevState;\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchComments(itemID);\r\n        \r\n    }, [itemID]);\r\n\r\n    const handleNewComment = (comment) => {\r\n        setComments((prevComments) => [...prevComments, comment]);\r\n    };\r\n\r\n    const toggleFlag = async() => {\r\n        setIsFlagged(!isFlagged);\r\n        // Call backend API to flag/unflag the post\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/GatorFound/items/${itemID}/flag`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': `${sessionStorage.getItem('token')}`,\r\n                },\r\n                body: JSON.stringify({ isFlagged: isFlagged }), // Sending flag status\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to flag/unflag the post');\r\n            }\r\n            handleFlag();\r\n        } catch (error) {\r\n            console.error('Error flagging post:', error);\r\n            // Handle error, maybe reset the flag state if the backend fails\r\n        }\r\n        \r\n    };\r\n    const deletePost = async (postId) => {\r\n        const confirmed = window.confirm('Are you sure you want to delete this post?');\r\n\r\n    if (!confirmed) return; // Abort if user cancels\r\n\r\n    try {\r\n        const response = await fetch(`http://localhost:5000/GatorFound/items/${postId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': `${sessionStorage.getItem('token')}`,\r\n            },\r\n        });\r\n        console.log(\"Deleted item ID is: \", itemID);\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n            alert('Post deleted successfully');\r\n            // Remove the post from the UI\r\n            setAllPosts((prevPosts) => prevPosts.filter((post) => post._id !== postId));\r\n        } else {\r\n            alert(`Failed to delete post: ${data.message}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error deleting post:', error);\r\n        alert('An error occurred while deleting the post');\r\n    }\r\n    };\r\n    // console.log(\"USER ID IS: \",sessionStorage.getItem('token').user.id  )\r\n\r\n    return (\r\n        <div className=\"post-item\">\r\n            {/* Flag Icon */}\r\n            <div className=\"flag-icon\" onClick={toggleFlag}>\r\n                <FontAwesomeIcon\r\n                    icon={faFlag}\r\n                    className={isFlagged ? 'flagged' : 'unflagged'}\r\n                />\r\n\r\n            </div>\r\n            <h5>\r\n            <strong>Posted by:</strong> {username || 'Anonymous'}\r\n            </h5>\r\n            {userID === postId && (\r\n                <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => deletePost(itemID)}\r\n                >\r\n                    Delete\r\n                </button>\r\n            )}\r\n\r\n            <h4>\r\n                <strong>\r\n                    <u>{postType === 'lost' ? 'Lost Item' : 'Found Item'}:</u>\r\n                </strong>{' '}\r\n                {itemName}\r\n            </h4>\r\n            <p>\r\n                <strong>\r\n                    <u>Description:</u>\r\n                </strong>{' '}\r\n                {itemDescription || 'Not Provided'}\r\n            </p>\r\n            <p>\r\n                <strong>\r\n                    <u>Location:</u>\r\n                </strong>{' '}\r\n                {itemLocation || 'Not Provided'}\r\n            </p>\r\n\r\n            {/* Display the uploaded image if available */}\r\n            {itemPhoto && (\r\n                <div className=\"post-photo\">\r\n                    <p>\r\n                        <strong>\r\n                            <u>Photo:</u>\r\n                        </strong>\r\n                    </p>\r\n                    <img src={itemPhoto} alt={itemName} style={{ width: 'auto', height: 'auto' }} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Toggle Comment Section Button */}\r\n            <button className=\"toggle-comments\" onClick={toggleCommentSection}>\r\n                {showCommentSection ? '▼ Hide Comments' : '▶ Comment'}\r\n            </button>\r\n\r\n            {/* Render Comment Section if toggled open */}\r\n            {showCommentSection && (\r\n                <div>\r\n                    {isLoading ? (\r\n                        <p>Loading comments...</p> // Show loading message\r\n                    ) : (\r\n                        <CommentSection\r\n                            itemID={itemID}\r\n                            comments={comments}\r\n                            handleCommentSubmit={handleNewComment}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}