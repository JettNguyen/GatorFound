{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh Tran\\\\GatorFound-2\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState } from 'react';\nimport Login from './components/Login';\nimport Hotbar from './components/Hotbar';\nimport HomePage from './components/HomePage'; // Import the HomePage component\nimport PostPage from './components/PostPage';\nimport fillerPosts from './fillerPosts.json'; // Import filler posts for testing\nimport './App.css';\nimport logo from './components/GatorFoundLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Simulate login state\n  const [view, setView] = useState('home'); // Default view is the home page\n  const [lostPosts, setLostPosts] = useState(fillerPosts.filter(post => post.postType === 'lost')); // Initial lost posts\n  const [foundPosts, setFoundPosts] = useState(fillerPosts.filter(post => post.postType === 'found')); // Initial found posts\n  const [userPosts, setUserPosts] = useState([]); // User-created posts\n\n  // Handle creating a new post\n  const handleNewPost = newPost => {\n    setUserPosts([...userPosts, newPost]);\n    if (newPost.postType === 'lost') {\n      setLostPosts([...lostPosts, newPost]);\n    } else if (newPost.postType === 'found') {\n      setFoundPosts([...foundPosts, newPost]);\n    }\n  };\n\n  // If not logged in, show the login page\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Hotbar, {\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), view === 'home' && /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }, this), \" \", (view === 'lost' || view === 'found' || view === 'yourPosts' || view === 'createLostPost' || view === 'createFoundPost') && /*#__PURE__*/_jsxDEV(PostPage, {\n      view: view,\n      lostPosts: lostPosts,\n      foundPosts: foundPosts,\n      userPosts: userPosts,\n      handleNewPost: handleNewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"4Z3wVTVSCf2eITtBohN7SSBuri0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Hotbar","HomePage","PostPage","fillerPosts","logo","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","view","setView","lostPosts","setLostPosts","filter","post","postType","foundPosts","setFoundPosts","userPosts","setUserPosts","handleNewPost","newPost","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Thanh Tran/GatorFound-2/client/src/App.jsx"],"sourcesContent":["// src/App.jsx\r\nimport React, { useState } from 'react';\r\nimport Login from './components/Login';\r\nimport Hotbar from './components/Hotbar';\r\nimport HomePage from './components/HomePage'; // Import the HomePage component\r\nimport PostPage from './components/PostPage';\r\nimport fillerPosts from './fillerPosts.json'; // Import filler posts for testing\r\nimport './App.css';\r\nimport logo from './components/GatorFoundLogo.png';\r\n\r\nconst App = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Simulate login state\r\n    const [view, setView] = useState('home'); // Default view is the home page\r\n    const [lostPosts, setLostPosts] = useState(fillerPosts.filter(post => post.postType === 'lost')); // Initial lost posts\r\n    const [foundPosts, setFoundPosts] = useState(fillerPosts.filter(post => post.postType === 'found')); // Initial found posts\r\n    const [userPosts, setUserPosts] = useState([]); // User-created posts\r\n\r\n    // Handle creating a new post\r\n    const handleNewPost = (newPost) => {\r\n        setUserPosts([...userPosts, newPost]);\r\n\r\n        if (newPost.postType === 'lost') {\r\n            setLostPosts([...lostPosts, newPost]);\r\n        } else if (newPost.postType === 'found') {\r\n            setFoundPosts([...foundPosts, newPost]);\r\n        }\r\n    };\r\n\r\n    // If not logged in, show the login page\r\n    if (!isLoggedIn) {\r\n        return <Login setIsLoggedIn={setIsLoggedIn} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Hotbar setView={setView} />\r\n            {view === 'home' && <HomePage />} {/* Render HomePage when view is home */}\r\n            {(view === 'lost' || view === 'found' || view === 'yourPosts' || view === 'createLostPost' || view === 'createFoundPost') && (\r\n                <PostPage\r\n                    view={view}\r\n                    lostPosts={lostPosts}\r\n                    foundPosts={foundPosts}\r\n                    userPosts={userPosts}\r\n                    handleNewPost={handleNewPost}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}